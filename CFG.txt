<START> -> <PROG_HEADER><BODY>

<PROG_HEADER> -> <PROG_DECL><PROG_DECL_REST>
<PROG_DECL> -> Program
<PROG_DECL_REST> -> <PROG_NAME><SEMICOLON>

<BODY> -> <VAR><MAIN_BODY>

<VAR> -> <VAR_HEADER><VAR_BODY>
<VAR_HEADER> -> var
<VAR_BODY> -> <VAR_BODY><VAR_BODY>
<VAR_BODY> -> <IDENTIFIER><TYPE_DECL> | <IDENTIFIER><MORE_VAR>
<MORE_VAR> -> <COMMA><VAR_BODY>
<COMMA> -> ,
<TYPE_DECL> -> <COLON><VAR_TYPE>
<COLON> -> :
<VAR_TYPE> -> <PRIV_TYPE><SEMICOLON>
<PRIV_TYPE> -> integer | real | char | <ARRAY><PRIV_TYPE>
<ARRAY> -> <ARRAY_DECL><ARRAY_REST>
<ARRAY_DECL> -> <ARRAY_MARKER><RANGE>
<ARRAY_MARKER> -> array
<RANGE> -> <OPEN_BRACKET><RANGE_REST>
<OPEN_BRACKET> -> [
<RANGE_REST> -> <NUM><RANGE_REST_2>
<RANGE_REST_2> -> <RANGE_SEPARATOR><NUM_END>
<RANGE_SEPARATOR> -> ..
<NUM_END> -> <NUM><CLOSE_BRACKET>
<CLOSE_BRACKET> -> ]
<SEMICOLON> -> ;


<MAIN_BODY> -> <BEGIN><MAIN_PROGRAM>
<BEGIN> -> begin
<MAIN_PROGRAM> -> <ASSIGNMENT><MAIN_PROGRAM> | <CONDITIONAL><MAIN_PROGRAM> | <WHILE_LOOP><MAIN_PROGRAM> | <FOR_LOOP><MAIN_PROGRAM> | <REPEAT_LOOP><MAIN_PROGRAM> | <INPUT_OUTPUT><MAIN_PROGRAM> | <END><PERIOD>
<END> -> end
<PERIOD> -> .

<ASSIGNMENT> -> <IDENTIFIER><REST_ASSIGNMENT> | <ARRAY_ID><REST_ASSIGNMENT>
<ARRAY_ID> -> <IDENTIFIER><ARRAY_ELM>
<ARRAY_ELM> -> <OPEN_BRACKET><REST_ARRAY_ELM>
<REST_ARRAY_ELM> -> <NUM><CLOSE_BRACKET>
<REST_ASSIGNMENT> -> <EQUALS_TO><RIGHTHAND_ASSIGNMENT>
<EQUALS_TO> -> :=
<RIGHTHAND_ASSIGNMENT> -> <IDENTIFIER><SEMICOLON> | <ARRAY_ID><SEMICOLON> | <EXPRESSION><SEMICOLON>
<EXPRESSION> -> <IDENTIFIER><EXPR_REST> | <NUM><EXPR_REST> | <ARRAY_ID><EXPR_REST>
<EXPR_REST> -> <MATH_OPERATOR><EXPRESSION> | <COND_OPERATOR><EXPRESSION> | ;
<MATH_OPERATOR> -> + | - | * | div | mod 
<COND_OPERATOR> -> < | > | <= | >= | <> | = 

<CONDITIONAL> -> <CONDITIONAL_HEADER><MAIN_BODY_INSIDE>
<CONDITIONAL_HEADER> -> <FIRST_TYPE_CONDITIONAL><COND_HEADER_REST>
<FIRST_TYPE_CONDITIONAL> -> if

<MAIN_BODY_INSIDE> -> <BEGIN><MAIN_PROGRAM_INSIDE> | <BEGIN><NEXT_CONDITIONAL>

<MAIN_PROGRAM_INSIDE> -> <ASSIGNMENT><MAIN_PROGRAM_INSIDE>  | <CONDITIONAL><MAIN_PROGRAM_INSIDE>  | <WHILE_LOOP><MAIN_PROGRAM_INSIDE>  |   <FOR_LOOP><MAIN_PROGRAM_INSIDE>  | <REPEAT_LOOP><MAIN_PROGRAM>  | <INPUT_OUTPUT><MAIN_PROGRAM_INSIDE> | <END><SEMICOLON>

<NEXT_CONDITIONAL> -> <MAIN_PROGRAM_INSIDE><NEXT_CONDITIONAL>
<NEXT_CONDITIONAL> -> <NEXT_CONDITIONAL_HEADER><MAIN_BODY_INSIDE>
<NEXT_CONDITIONAL_HEADER> -> <ELSE><CONDITIONAL> | <ELSE><MAIN_BODY_INSIDE>
<ELSE> -> else
<CON_HEADER_REST> -> <COND_IF_EXPRESSION><THEN>
<THEN> -> then
<COND_IF_EXPRESSION> -> <OPEN_PARENTHESIS><EXPRESSION_REST>
<OPEN_PARENTHESIS> -> (

<EXPRESSION_REST> -> <COND_EXPRESSION><NEXT_COND> | <COND_EXPRESSION><CLOSE_PARENTHESIS>

<CLOSE_PARENTHESIS> -> )
<NEXT_COND> ->  <LOGICAL_OPERATOR><EXPRESSION>
<LOGICAL_OPERATOR>  -> and | or
<COND_EXPRESSION> -> <LEFT_COND_EXPRESSION><RIGHT_COND_EXPRESSION>
<LEFT_COND_EXPRESSION> -> <IDENTIFIER><OPERATION> | <IDENTIFIER>
<OPERATION> -> <MATH_OPERATOR><IDENTIFIER>
<RIGHT_COND_EXPRESSION> -> <COND_OPERATOR><LEFT_COND_EXPRESSION>

<WHILE_LOOP> -> <WHILE_EXPRESSION><LOOP_REST>
<WHILE_EXPRESSION> -> <WHILE><EXPRESSION>
<WHILE> -> While
<LOOP_REST> -> <DO><MAIN_BODY_LOOP>
<DO> -> do
<MAIN_BODY_LOOP> -> <BEGIN><MAIN_PROGRAM_INSIDE>

<FOR_LOOP> -> <NORMAL_FOR><STEP_FOR>
<NORMAL_FOR> -> <LEFT_FOR><RIGHT_FOR>
<LEFT_FOR> -> <FOR><ASSIGNMENT>
<FOR> -> For
<RIGHT_FOR> -> <INC/DEC><IDENTIFIER>
<INC/DEC> -> to | downto
<STEP_FOR> -> <STEP_EXPRESSION><LOOP_REST>
<STEP_EXPRESSION> -> <STEP><IDENTIFIER>
<STEP> -> step

<REPEAT_LOOP> -> <REPEAT_PART><UNTIL_PART>
<REPEAT_PART> -> <REPEAT><MAIN_PROG_REPEAT> 
<REPEAT> -> Repeat
<MAIN_PROG_REPEAT> -> <ASSIGNMENT><MAIN_PROG_REPEAT>  | <CONDITIONAL><MAIN_PROG_REPEAT>  | <WHILE_LOOP><MAIN_PROG_REPEAT>  |   <FOR_LOOP><MAIN_PROG_REPEAT>  | <REPEAT_LOOP><MAIN_PROG_REPEAT>  | <INPUT_OUTPUT><MAIN_PROG_REPEAT> 
<UNTIL_PART> -> <UNTIL><UNTIL_REST>
<UNTIL_REST> -> <COND_IF_EXPRESSION><SEMICOLON>
<UNTIL> -> until

<QUOTES> -> "
<INPUT_OUTPUT> -> <INPUT><PARAM_IN> | <OUTPUT><PARAM_OUT>
<INPUT> -> Input
<OUTPUT> -> Output
<PARAM_IN> -> <OPEN_PARENTHESIS><PARAM_IN_REST>
<PARAM_IN_REST> -> <IDENTIFIER><NEXT_IDENTIFIER_IN> | <ARRAY_ID><NEXT_IDENTIFIER_IN>
<NEXT_IDENTIFIER_IN> -> <COMMA><PARAM_IN_REST> | <CLOSE_PARENTHESIS><SEMICOLON>
<PARAM_OUT> -> <OPEN_PARENTHESIS><PARAM_OUT_REST>
<PARAM_OUT_REST> -> <<IDENTIFIER><NEXT_IDENTIFIER_OUT> | <ARRAY_ID><NEXT_IDENTIFIER_OUT> | <EXPRESSION><NEXT_IDENTIFIER_OUT> | <TEXT><NEXT_IDENTIFIER_OUT>
<NEXT_IDENTIFIER_OUT> -> <COMMA><PARAM_OUT_REST> | <CLOSE_PARENTHESIS><SEMICOLON>
<TEXT> -> <QUOTES><TEXT_REST>
<TEXT_REST> -> <TEXT_BODY><ADD_TEXT>
<ADD_TEXT> -> " | <PLUS><TEXT>
<PLUS> -> +

